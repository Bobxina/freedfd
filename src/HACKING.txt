* No usemos la Standard Template Library (¿Qué opinan?

  Es muy buena idea el estándar, pero cambia mucho. Tratemos de escribir
  código muy simple que no dependa de librerías que cambian con el
  tiempo.

  TODO: ¿Qué opinan? Creo que usar la STL puede ser bueno para
  hacer el código más pequeño, y ganar funcionalidades como la de
  implementar las matrices dispersas en función de <map>.
  (Se podría pensar en tener otro código para las matrices dispersas).

* No use TABs dentro del código. Esta es una guerra religiosa, y la gente
  nunca se podrá de acuerdo al respecto.

* Trate de minimizar el uso de comentarios. Si siente la necesidad
  de escribirlos, ¿No será porque su código es difícil de leer? Si no
  es el caso, por favor poner el comentario :-)

* Use nombres de archivos con guiones, y no con subrayados.

* No usaremos objetos para el manejo de cadenas. La idea es usar new y delete
  para el manejo de estas. Hay que tener cuidado de no usar strdup ni otras
  funciones que usen malloc. Si necesita usar una, defina una equivalente en
  dfd-wrappers.cpp.

* Encontratá código como "Imprime("No Entiendoooo 124332");
  La idea es usar assert.h para que el programa se muera si
  ocurre una excepción. Este código deberia ser reemplazado con
  llamadas a assert(0); (assert se define en assert.h).

Se reciben sugerencias y comentarios.
